{
  "hash": "614a1baaadbcbac433b7c08e74730436",
  "result": {
    "engine": "knitr",
    "markdown": "# Emerging Industries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reportabs)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'purrr' was built under R version 4.5.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nindustry_employment <- read_absdata(\"industry_employment\", export_dir = \"data\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nReading industry_employment file found in data\n```\n\n\n:::\n:::\n\n\nThe following section outlines opportunities for emerging sectors to provide strong growth and deliver solid outcomes, especially identifying the use of tools such as multi-employer bargaining and precinct/place based work.\n\nA short brief has been prepared for each identified industry - covering:\n\n-   is the industry in growth or decline?\n\n-   what and where are the growth opportunities?\n\n-   are there opportunities to use multi-employer bargaining, same job same pay or other tools?\n\n-   is there a link to Future Made in Australia?\n\n-   what else does your team think is worth considering?\n\nThe **industries** covered are:\n\n-   Steel/aluminium\n\n-   Wind tower construction\n\n-   Laboratories \n\n-   Aviation\n\n-   Roadside assist\n\n-   Defence\n\n-   Construction supply chains\n\n-   Mine servicing\n\n-   Food\n\n-   Iron – bringing in foundries \n\n-   Rail\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}